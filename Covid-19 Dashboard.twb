<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1110.1623                               -->
<workbook original-version='18.1' source-build='2020.3.3 (20203.20.1110.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_19_india.csv (Multiple Connections)' inline='true' name='federated.123p8it16qmjsx1h1831x0qbb2tw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.1xljn7b1uaouq713te9eh06w315z'>
            <connection class='textscan' directory='C:/Users/Aditi Devgan/Desktop/GitHub/Tableau/dataset' filename='covid_19_india.csv' password='' port='0' server='' />
          </named-connection>
          <named-connection caption='covid_vaccine_statewise' name='textscan.1vo9ib70lg3vwf12283ox1a47qav'>
            <connection class='textscan' directory='C:/Users/Aditi Devgan/Desktop/GitHub/Tableau/dataset' filename='covid_vaccine_statewise.csv' password='' server='' />
          </named-connection>
          <named-connection caption='StatewiseTestingDetails' name='textscan.1vj5hqy0pll6501cq2uqx1agqpji'>
            <connection class='textscan' directory='C:/Users/Aditi Devgan/Desktop/GitHub/Tableau/dataset' filename='StatewiseTestingDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1xljn7b1uaouq713te9eh06w315z' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1xljn7b1uaouq713te9eh06w315z' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48]' role='measure' type='quantitative' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' palette='brown_10_0' type='palette'>
            <map to='#9f3632'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#a23932'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#a63d32'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#aa4132'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#ae4533'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#b14a34'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#b44f35'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#b75435'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#b95938'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#bc5e3a'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#be633d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#c0673f'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#c26c43'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#c47146'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#c6764a'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#c87a4d'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#cb7f4f'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#ce8451'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#d18954'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#d48d54'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#d79155'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#da9555'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#dc9957'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#df9e5b'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#e1a260'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#e3a764'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#e5ab69'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#e6b06f'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#e7b575'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#e9b97b'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#eabe83'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#eac38b'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#ebc892'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#eccc9c'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ecd1a7'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#edd6b2'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_india.csv' id='covid_19_india.csv_EECC067B7DA24047B3AEC4D51C615F48'>
            <properties context=''>
              <relation connection='textscan.1xljn7b1uaouq713te9eh06w315z' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Covid-19 India'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india.csv (Multiple Connections)' name='federated.123p8it16qmjsx1h1831x0qbb2tw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.123p8it16qmjsx1h1831x0qbb2tw'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' />
              <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.123p8it16qmjsx1h1831x0qbb2tw].[Latitude (generated)]</column>
            <column>[federated.123p8it16qmjsx1h1831x0qbb2tw].[Longitude (generated)]</column>
            <column>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.123p8it16qmjsx1h1831x0qbb2tw].[max:Confirmed:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.123p8it16qmjsx1h1831x0qbb2tw].[max:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.123p8it16qmjsx1h1831x0qbb2tw].[Latitude (generated)]' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]' />
              <color column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[max:Confirmed:qk]' />
              <geometry column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'><![CDATA[<[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>No. of Confirmed cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.123p8it16qmjsx1h1831x0qbb2tw].[max:Confirmed:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.123p8it16qmjsx1h1831x0qbb2tw].[Latitude (generated)]</rows>
        <cols>[federated.123p8it16qmjsx1h1831x0qbb2tw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3A04379B-15FE-485E-9479-478508CB26B4}' />
    </worksheet>
    <worksheet name='Percentage distribution of confirmed cases of each state '>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;&#10;</run>
            <run bold='true' fontcolor='#e15759' fontsize='12' underline='true'>Top 15 most affected states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india.csv (Multiple Connections)' name='federated.123p8it16qmjsx1h1831x0qbb2tw' />
          </datasources>
          <datasource-dependencies datasource='federated.123p8it16qmjsx1h1831x0qbb2tw'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[pcto:sum:Deaths:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:Date:qk]' included-values='in-range'>
            <min>#2021-01-16#</min>
            <max>#2021-05-16#</max>
          </filter>
          <slices>
            <column>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]' />
              <wedge-size column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[pcto:sum:Deaths:qk]' />
              <size column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[sum:Deaths:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.123p8it16qmjsx1h1831x0qbb2tw].[pcto:sum:Deaths:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[sum:Deaths:qk]</field>
                      <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[pcto:sum:Deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Andhra Pradesh&quot;</value>
                    <value>897859</value>
                    <value>0.042890415787565667</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='119' y='-43' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.123p8it16qmjsx1h1831x0qbb2tw].[pcto:sum:Deaths:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]</field>
                      <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[sum:Deaths:qk]</field>
                      <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[pcto:sum:Deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Maharashtra&quot;</value>
                    <value>6887502</value>
                    <value>0.32901360293508231</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-107' y='42' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{935D1F9C-5BC5-4F76-A99F-DDCC296392B3}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india.csv (Multiple Connections)' name='federated.123p8it16qmjsx1h1831x0qbb2tw' />
          </datasources>
          <datasource-dependencies datasource='federated.123p8it16qmjsx1h1831x0qbb2tw'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.123p8it16qmjsx1h1831x0qbb2tw].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.123p8it16qmjsx1h1831x0qbb2tw].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.123p8it16qmjsx1h1831x0qbb2tw].[max:Confirmed:qk]</rows>
        <cols>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{A2AA6F0A-2338-4CE3-A2D1-20B6D38D9430}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Covid-19 India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.123p8it16qmjsx1h1831x0qbb2tw].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:ConfirmedForeignNational:nk]</field>
            <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]</field>
            <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State:nk]</field>
            <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4AFB907-C233-4989-94B7-9C59B8CC9EDD}' />
    </window>
    <window class='worksheet' maximized='true' name='Percentage distribution of confirmed cases of each state '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.123p8it16qmjsx1h1831x0qbb2tw].[sum:Deaths:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:Date:qk]</field>
            <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C1D412B-9A79-4B33-8527-126B1DDB06D2}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.123p8it16qmjsx1h1831x0qbb2tw].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A58D23F-1EE2-4614-B407-AE38DD8E6D6F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid-19 India' width='192'>
      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
      h6+/ztbBIbfWlvhifYdrpTyfPvga7+kDljIJlnSPzse7VEcqH1y9yKC2w9b2Y7qpHFe+831/
      P0EYEwhNHcwQJ9NZOv0R3/nOe0QMlQ3bOvaz5E4KwTqUMEQiEdLpNOl0mkQiMVaHL44JhXDG
      EAVoLxu6rvsJO9G787w4La0+ixYQ1+xvb1Pauk/6FRP/acnIWRHVNXRNY+hMftbCXJq3Lyxz
      sbTAtVyMw3afnz/c5JONbRbmjkOY5UaDWDTGZxs7FDPxZ9esc/+wwTvL83z06CmVdpuPn2xQ
      G9p0RjbZVIbrToUl/RnB6iraoEtvZGFqKtczCSL1ih9NE2Z5kGZFo6zg2ugRk5XVVUxDIxaN
      UdneQhWet4jcTFu8WCzmb18TvzFNk0Qi4ZdUi5CUZVl+uFMmqBfdQTYJ4jCMWCz2QjuLghnK
      IM5qAnW3npCJzB4pmvbfJLxMm90DaoMRv6q2OeiPeNoZ0LEcstkCT9Yf0dE08vEEd3f3iasO
      D/arDFGZi5uszc8T01QUVePb167ww6urrBTyxHAZuB5z8RiaZ3G33ORyPosRMbk4XyCpu7QG
      x2UXEXO8zf3NTIz1at2f40Lc5PEvfkK31SIajfo0KPoOwfimm0nVCq7rcuX9bx9HgcLUhby4
      guOi0SjtdhtN00gkEmML7zgOrVZrLAMskmTCwxcDFL0/XyZkk2N3d5fFxcUzh0Hl+HRwLcR8
      Zi29EH7T/b/9K96Nnr1iFeCvP/qYiKJxYe0Kc7pNLJ6i1W6TT8Wo9WxK6RgHzQ660+NpSyHJ
      iHwuy0I2xf5Rg/ncHMN+l6GnMj+10dVzfLZfod3rcSmfQ1FgvXGcUFzQXCIKzJsayZeQnT4L
      HndGtM0E768tA8fvYqM7pJousHDlGtX1J+i6wcXb7/itEGfZ020YBnoikfCbUnmeR7vd9glH
      NitE4iuZTIbG92UmkpNoYh+oiMtHIhFfRb0MZ1icuCjMHrnd+Fkhj/9FtZRYs4X3P+TLLz9l
      bXS82ShtTj6lMQjbcdANHUOF39y9S92NciWXpNcx+M+/vsfvfXCdw5bLzbxBox/Bc7sMR0O6
      oxG/+eoO2dIq2rCOFknw39x+49TxKorCrVIeVSkwclzuVRusZNNczmUY2g6O61Lt9tirVbme
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Percentage distribution of confirmed cases of each state ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
